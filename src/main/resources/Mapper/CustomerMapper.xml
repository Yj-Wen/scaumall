<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.CustomerMapper">

	<resultMap type="customer" id="customerMap">
		<id column="customerID" property="customerID" />
		<result column="customerName" property="customerName" />
		<result column="customerPwd" property="customerPwd" />
		<result column="customerPhone" property="customerPhone" />
		<result column="customerEmail" property="customerEmail" />
		<result column="customerRegDate" property="customerRegDate" />
		<collection property="addressList" fetchType="lazy"
			select="Mapper.AddressMapper.findAddressByCustomoerID" column="{customerID=customerID}">
		</collection>
	</resultMap>

	<resultMap type="customer" id="customerMap1" extends="customerMap">
		<association property="cart" column="{customerID=customerID}"
			fetchType="lazy" select="Mapper.CartMapper.findBycustomerID" />
	</resultMap>
	
	
	<resultMap type="customerAndPrice" id="customerAndPriceMap">
		<id column="mingzi1" property="customerName" />
		<result column="jiage1" property="finaltotalPrice" />
	</resultMap>
	
	

	<select id="findBycustomerID" resultMap="customerMap1">
		select * from Customer
		where customerID = #{customerID}
	</select>

	<select id="lazyfindBycustomerID" resultMap="customerMap">
		select * from
		Customer where customerID = #{customerID}
	</select>

	<select id="IsCustomerNameExist" resultType="java.lang.Integer">
		select customerID
		from Customer where customerName = #{customerName}
	</select>

	<select id="findBycustomerNameAndcustomerPwd" resultMap="customerMap1">
		select *
		from Customer where customerName=#{customerName} and
		customerPwd=#{customerPwd}
	</select>
	
	<select id="getHighestCustomer" resultMap="customerAndPriceMap">
		select *
from 
	(select B1.customerName as mingzi1,sum(A1.totalPrice) as jiage1
	 from indent A1,customer B1
	 where A1.customerID=B1.customerID
	 GROUP BY B1.customerName) C1
having jiage1=(select max(jiage)
							from 
								(select B.customerName as mingzi,sum(A.totalPrice) as jiage
									from indent A,customer B
									where A.customerID=B.customerID
										GROUP BY B.customerName) C)
	</select>

	<insert id="insert" keyProperty="customerID" useGeneratedKeys="true">
		insert into Customer values(#{customerID}, #{customerName},
		#{customerPwd},
		#{customerPhone}, #{customerEmail}, #{customerRegDate})
	</insert>
	<update id="update">
		update Customer set customerName=#{customerName},
		customerPwd=#{customerPwd},customerPhone=#{customerPhone},customerEmail=#{customerEmail},customerRegDate=#{customerRegDate}
		where customerID=#{customerID}
	</update>
	<update id="updatecustomerNameBycustomerID">
		update Customer set customerName=#{customerName}
		where
		customerID=#{customerID}
	</update>
	<update id="updatecustomerPasswordBycustomerID">
		update Customer set customerPwd=#{customerPassword}
		where
		customerID=#{customerID}
	</update>
	<delete id="delete">
		delete from Customer where customerID=#{customerID}
	</delete>
</mapper>